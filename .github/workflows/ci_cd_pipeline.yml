name: Python CI-CD

# trigger the workflow on any push to the main branch or pull request
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    # ###### if we are running this flask app without docker container ######
    # test:
    #     runs-on: ubuntu-latest

    #     steps:
    #         # Step 1: Check out the code from this repository
    #         - name: Check out code
    #           uses: actions/checkout@v4
            
    #         # Step 2: install uv
    #         - name: Install uv
    #           uses: astral-sh/setup-uv@v5

    #         # Step 3: set up python using pyproject.toml
    #         - name: "Set up python"
    #           uses: actions/setup-python@v5
    #           with:
    #             python-version-file: "pyproject.toml"

    #         # Step 4: Install the project 
    #         - name: Install the project
    #           run: uv sync --locked --all-extras --dev
            
    #           # Step 5: Run the test
    #         - name: Run tests
    #           run: uv run pytest tests

    # ## deploying the docker image to render
    # deploy:
    #   needs: docker-build-test-publish
    #   # Only run this step if the branch is main
    #   if: github.ref == 'refs/heads/main'
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Trigger Render Deploy
    #       run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}




    ###### if we are running this flask app inside docker container ######
    docker-build-test-publish:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        ## building the image
        - name: Build the docker image
          run: docker build . --file Dockerfile --tag flasktest_web_app_ci_cd:latest
        
        ## test the container
        - name: Run tests inside the container
          run: docker run --rm flasktest_web_app_ci_cd:latest uv run pytest tests --maxfail=1 --disable-warnings -q

        - name: Tag image with DockerHub Repo
          run: docker tag flasktest_web_app_ci_cd:latest ${{ secrets.DOCKERHUB_USERNAME }}/flasktest_web_app_ci_cd:latest

        ## publish the image
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: Push Docker image
          run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/flasktest_web_app_ci_cd:latest
    

    ## deploying the docker image to render
    deploy-to-render:
      needs: docker-build-test-publish
      # Only run this step if the branch is main
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:
        - name: Trigger Render Deploy
          run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}