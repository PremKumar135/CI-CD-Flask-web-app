name: Python CI

# trigger the workflow on any push to the main branch or pull request
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    # ###### if we are running this flask app without docker container ######
    # test:
    #     runs-on: ubuntu-latest

    #     steps:
    #         # Step 1: Check out the code from this repository
    #         - name: Check out code
    #           uses: actions/checkout@v4
            
    #         # Step 2: install uv
    #         - name: Install uv
    #           uses: astral-sh/setup-uv@v5

    #         # Step 3: set up python using pyproject.toml
    #         - name: "Set up python"
    #           uses: actions/setup-python@v5
    #           with:
    #             python-version-file: "pyproject.toml"

    #         # Step 4: Install the project 
    #         - name: Install the project
    #           run: uv sync --locked --all-extras --dev
            
    #           # Step 5: Run the test
    #         - name: Run tests
    #           run: uv run pytest tests



    ###### if we are running this flask app inside docker container ######
    dockerbuild:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Build the docker image
          run: docker build . --file Dockerfile --tag workflow-test:$(date +%s)
      
      build-and-test:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Install uv
            uses: astral-sh/setup-uv@v5

          - name: "Set up python"
            uses: actions/setup-python@v5
            with:
              python-version-file: "pyproject.toml"

          - name: Install the project
            run: uv sync --locked --all-extras --dev
          
          - name: Run tests
            run: uv run pytest tests

      build-and-publish:
        needs: build-and-test
        runs-on: ubuntu-latest

        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: Set Up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push Docker image
            uses: docker/build-push-action@v6
            with:
              context: .
              file: ./Dockerfile
              push: true
              tags: ${{ secrets.DOCKER_USERNAME }}/flasktest_web_app_ci_cd:latest

          - name: Image digest
            run: echo ${{ steps.build-and-publish.outputs.digest }}

    
    # deploy:
    #   needs: test
    #   # Only run this step if the branch is main
    #   if: github.ref == 'refs/heads/main'
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Trigger Render Deploy
    #       run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}